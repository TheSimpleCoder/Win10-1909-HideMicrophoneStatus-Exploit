#include <stdio.h>
#include <conio.h>
#include <windows.h>
#include <commctrl.h>

void GetButtonText(HWND hwndTaskbar, int iNum, char* szText, UINT iMax)
{
    DWORD d;
    char** lp;

    // получаем ID процесса таскбара
    GetWindowThreadProcessId(hwndTaskbar, &d);

    // открываем процесс на запись/чтение
    HANDLE h = OpenProcess(PROCESS_VM_OPERATION | PROCESS_VM_READ | PROCESS_VM_WRITE, 0, d);

    // создаем переменную в другом процессе    
    lp = (LPSTR*)VirtualAllocEx(h, NULL, iMax, MEM_RESERVE | MEM_COMMIT, PAGE_READWRITE);

    // очищаем нашу строку, куда будем считывать текст окна из таскбара
    memset(szText, 0, iMax);

    // пишем пустую строку в процесс.
    // Этого, в данном случае можно не делать. Просто показал как это делается
    WriteProcessMemory(h, (LPVOID)lp, szText, iMax, NULL);

    // получаем название кнопки в выделенную в другом процессе строку
    SendMessage(hwndTaskbar, TB_GETBUTTONTEXTA, iNum, (LPARAM)lp);

    // читаем значение строки из другого процесса в наш
    ReadProcessMemory(h, (LPVOID)lp, szText, iMax, 0l);

    // удаляем переменную в другом процессе
    VirtualFreeEx(h, lp, 0, MEM_RELEASE);

    // заканчиваем работу с другим процессом
    CloseHandle(h);
}

bool isPartOf(char* w1)
{
    int i = 0;
    int j = 0;

    char w2[200] = "Микрофон использует";

    while (w1[i] != '\0') {
        if (w1[i] == w2[j])
        {
            int init = i;
            while (w1[i] == w2[j] && w2[j] != '\0')
            {
                j++;
                i++;
            }
            if (w2[j] == '\0') {
                return true;
            }
            j = 0;
        }
        i++;
    }
    return false;
}

void UpdateTray(HWND hWnd)
{
    RECT rect;
    GetClientRect(hWnd, &rect);
    SendMessage(hWnd, WM_MOUSEMOVE, NULL, MAKELPARAM(rect.right / 2, rect.bottom / 2));
    SendMessage(hWnd, WM_LBUTTONDOWN, NULL, MAKELPARAM(rect.right / 2, rect.bottom / 2));
    SendMessage(hWnd, WM_LBUTTONUP, NULL, MAKELPARAM(rect.right / 2, rect.bottom / 2));
}

int main()
{
    char szText[200];
    HWND hwndTaskbar;

    hwndTaskbar = FindWindow(L"Shell_TrayWnd", NULL); // Панелька внизу
    hwndTaskbar = FindWindowEx(hwndTaskbar, NULL, L"TrayNotifyWnd", NULL); // Панель левее кнопки пуск
    hwndTaskbar = FindWindowEx(hwndTaskbar, NULL, L"SysPager", NULL); // Панель, там где минимизированные окна и т.п.
    hwndTaskbar = FindWindowEx(hwndTaskbar, NULL, L"ToolbarWindow32", NULL); // хм... таскбар

    for (;;)
    {
        int max = SendMessage(hwndTaskbar, TB_BUTTONCOUNT, 0, 0);

        for (int i = 0; i < max; i++)
        {
            GetButtonText(hwndTaskbar, i, szText, 200);

            if (isPartOf(szText))
            {
                //Удаляем
                int btnIndex = SendMessage(hwndTaskbar, TB_COMMANDTOINDEX, i, 0);
                SendMessage(hwndTaskbar, TB_DELETEBUTTON, btnIndex, 0);
                UpdateTray(hwndTaskbar);
            }
        }
        Sleep(50);
    }
    return 0; // выходим
}